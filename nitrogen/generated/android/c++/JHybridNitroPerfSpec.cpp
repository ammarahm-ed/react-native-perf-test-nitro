///
/// JHybridNitroPerfSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridNitroPerfSpec.hpp"





namespace margelo::nitro::nitroperf {

  jni::local_ref<JHybridNitroPerfSpec::jhybriddata> JHybridNitroPerfSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridNitroPerfSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridNitroPerfSpec::initHybrid),
    });
  }

  size_t JHybridNitroPerfSpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  

  // Methods
  double JHybridNitroPerfSpec::multiply(double a, double b) {
    static const auto method = _javaPart->getClass()->getMethod<double(double /* a */, double /* b */)>("multiply");
    auto __result = method(_javaPart, a, b);
    return __result;
  }

} // namespace margelo::nitro::nitroperf
