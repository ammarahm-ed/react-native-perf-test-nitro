///
/// HybridNitroPerfSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroPerfSpec``
public protocol HybridNitroPerfSpec_protocol: HybridObject {
  // Properties
  

  // Methods
  func multiply(a: Double, b: Double) throws -> Double
}

/// See ``HybridNitroPerfSpec``
public class HybridNitroPerfSpec_base {
  private weak var cxxWrapper: HybridNitroPerfSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroPerfSpec_cxx {
  #if DEBUG
    guard self is HybridNitroPerfSpec else {
      fatalError("`self` is not a `HybridNitroPerfSpec`! Did you accidentally inherit from `HybridNitroPerfSpec_base` instead of `HybridNitroPerfSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroPerfSpec_cxx(self as! HybridNitroPerfSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroPerf HybridObject.
 * Implement this protocol to create Swift-based instances of NitroPerf.
 * ```swift
 * class HybridNitroPerf : HybridNitroPerfSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroPerfSpec = HybridNitroPerfSpec_protocol & HybridNitroPerfSpec_base
